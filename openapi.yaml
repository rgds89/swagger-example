openapi: 3.0.3
info:
  title: API de consultório.
  description: API para controlar médicos e suas especialidades dentro do consultório.
  version: 0.0.1
  termsOfService: https://mockapi.io
  contact:
    name: Suporte a Devs
    email: contact@example.com
    url: https://mockapi.io
  license:
    name: Licença GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.pt-br.html
externalDocs:
  description: Documentação burocrática.
  url: https://mockapi.io
servers:
  - url: https://SECRET.mockapi.io
    description: API de Teste
paths:
  /especialidades:
    get:
      summary: Recupera todas as epecialidades.
      responses:
        200:
          $ref: '#/components/responses/EspecialidadesResponse'
    post:
      summary: Criar nova especialidades
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descricao:
                  type: string
      responses:
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Especialidade'

  /especialidades/{id}:
    get:
      summary: Recupera uma entidade pelo ID.
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Especialidade'
        404:
          description: Especialidade não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Atualizar uma especialidade especifica.
      parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
           schema:
            type: object
            properties:
              descricao:
                type: string
      responses:
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Especialidade'
        404:
          description: Especialidade não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary:  Deletar uma especialidade.
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Especialidade'
        404:
          description: Especialidade não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Especialidade:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        descricao:
          type: string
    Especialidades:
     type: array
     items:
      $ref: '#/components/schemas/Especialidade'
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
          
  responses:
    EspecialidadesResponse:
      description: Sucesso
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Especialidades'